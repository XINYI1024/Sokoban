package sokoban;

/**
 * 説明：ゲームのマップ情報を保存し、指定されたレベルのマップデータを返す
 */
public class GameMapSet {
 
	//  各ゲームレベルのマップ配列を保存
	private static byte map[][][] = {
			{ { 0, 0, 1, 1, 1, 0, 0, 0 }, { 0, 0, 1, 4, 1, 0, 0, 0 }, { 0, 0, 1, 9, 1, 1, 1, 1 },
					{ 1, 1, 1, 2, 9, 2, 4, 1 }, { 1, 4, 9, 2, 5, 1, 1, 1 }, { 1, 1, 1, 1, 2, 1, 0, 0 },
					{ 0, 0, 0, 1, 4, 1, 0, 0 }, { 0, 0, 0, 1, 1, 1, 0, 0 } },
			{ { 1, 1, 1, 1, 1, 0, 0, 0, 0 }, { 1, 9, 9, 5, 1, 0, 0, 0, 0 }, { 1, 9, 2, 2, 1, 0, 1, 1, 1 },
					{ 1, 9, 2, 9, 1, 0, 1, 4, 1 }, { 1, 1, 1, 9, 1, 1, 1, 4, 1 }, { 0, 1, 1, 9, 9, 9, 9, 4, 1 },
					{ 0, 1, 9, 9, 9, 1, 9, 9, 1 }, { 0, 1, 9, 9, 9, 1, 1, 1, 1 }, { 0, 1, 1, 1, 1, 1, 0, 0, 0 } },
			{ { 1, 1, 1, 1, 1, 0, 0, 0, 0 }, { 1, 9, 9, 9, 1, 1, 0, 0, 0 }, { 1, 9, 2, 9, 9, 1, 0, 0, 0 },
					{ 1, 1, 9, 2, 9, 1, 1, 1, 1 }, { 0, 1, 1, 1, 5, 4, 9, 9, 1 }, { 0, 0, 1, 9, 9, 4, 1, 9, 1 },
					{ 0, 0, 1, 9, 9, 9, 9, 9, 1 }, { 0, 0, 1, 1, 1, 1, 1, 1, 1 } },
			{ { 0, 0, 1, 1, 1, 1 }, { 0, 1, 1, 9, 9, 1 }, { 1, 1, 9, 2, 9, 1 }, { 1, 4, 2, 9, 5, 1 },
					{ 1, 2, 4, 9, 1, 1 }, { 1, 4, 9, 1, 1, 0 }, { 1, 1, 1, 1, 0, 0 } },
 
			{ { 1, 1, 1, 1, 1, 1 }, { 1, 9, 5, 9, 9, 1 }, { 1, 9, 2, 9, 9, 1 }, { 1, 2, 9, 1, 1, 1 },
					{ 1, 4, 9, 4, 1, 0 }, { 1, 1, 1, 1, 1, 0 } }

 
	};
	// ゲームレベルの数
	private static int count = map.length;
 
	// 指定されたレベルのマップデータのクローン配列を返す
	public static byte[][] getMap(int grade) {
		if (grade >= 0 && grade < count) {
			return realCloneArray(map[grade]);
		}
		return realCloneArray(map[0]);
	}
	
	//　2次元配列をディープコピーする
	private static byte[][] realCloneArray(byte[][] map){
		byte[][] cloneMap = new byte[map.length][map[0].length];
		for(int i=0;i<map.length;i++){
			cloneMap[i] = map[i].clone();
		}
		return cloneMap;
	}
 
	// レベル数を取得する
	public static int getGradeCount() {
		return count;
	}
 
}